<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AKS on</title><link>https://shrestharajat.com/tags/AKS/</link><description>Recent content in AKS on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://shrestharajat.com/tags/AKS/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://shrestharajat.com/Microservice-Architecture/AKS/AKS-Automatic-Deployments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shrestharajat.com/Microservice-Architecture/AKS/AKS-Automatic-Deployments/</guid><description>AKS Automatic Deployments setup #Azure #AKS #Kubernetes
For Creating a AKS cluster with Automatic deployments:
Requirements: A valid Azure subscription kubectl installed azure-cli installed Steps: Create a resource group, acr and aks: 1 2 3 4 5 az group create --name test-nginx --location uksouth az acr create --resource-group test-nginx --name shrestharajat --sku Basic az aks create --resource-group test-nginx --name nginx-cluster --node-count 1 --enable-addons monitoring Link the ACR to AKS 1 az aks update -n nginx-cluster -g test-nginx --attach-acr shrestharajat Push an initial image to ACR 1 az acr build --image nginx/testnginx:latest --registry shrestharajat --file Dockerfile .</description></item><item><title/><link>https://shrestharajat.com/Microservice-Architecture/AKS/AKS-Full-Demo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shrestharajat.com/Microservice-Architecture/AKS/AKS-Full-Demo/</guid><description>￼ # AKS Full Demo
#Azure #Kubernetes #AKS #Nginx #Helm #Ingress #TLS #CICD AKS AKS Full demo with following features:</description></item><item><title/><link>https://shrestharajat.com/Microservice-Architecture/AKS/AKS-Ingress-Controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shrestharajat.com/Microservice-Architecture/AKS/AKS-Ingress-Controller/</guid><description>￼ ￼ # Ingress controller in AKS #Azure #Kubernetes #AKS #Nginx
AKS It is used to configure reverse proxy, configurable traffic routing, and TLS termination for Kubernetes services.</description></item></channel></rss>